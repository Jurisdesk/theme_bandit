#!/usr/bin/env ruby

$LOAD_PATH.unshift File.join(File.dirname(__FILE__), '..', 'lib')

require 'fileutils'
require 'theme_bandit'
require 'uri'
require 'bundler'

SUPPORTED_ENGINES = /^(erb|haml|slim)$/

def get_root
  Gem::Specification.find_by_name('theme_bandit').gem_dir
rescue Gem::LoadError
  Dir.pwd
end

def init
  ThemeBandit.configure do |config|
    config.url             = ask_user_for_domain
    config.template_engine = ask_user_for_language
    config.gem_root        = get_root
  end
  start_fresh
  document = ThemeBandit::Downloader.get_theme
  generate_app(document)
  ask_user_to_start_rack_app
end

def start_fresh
  `rm -rf theme`
  make_a_directory
end

def generate_app(document)
  ThemeBandit::DocumentWriter.new(document).write
  ThemeBandit::RackGenerator.build
end

def make_a_directory
  FileUtils.mkdir_p 'theme'
end

def ask_user_for_domain
  puts 'Enter the URL of the theme you wish to download (example: http://www.google.com)'
  url = $stdin.gets.chomp

  begin
    URI.parse(url)
    return url
  rescue => e
    ThemeBandit::Logger.red e
    exit
  end
end

def ask_user_for_language
  puts 'Select your favorite template engine (erb, haml, slim)'
  answer = $stdin.gets.chomp
  answer = 'erb' if answer == ''
  unless match = answer.match(SUPPORTED_ENGINES)
    ThemeBandit::Logger.red 'You must select a supported template engine (erb, haml, or slim)'
    exit
  end
  match[0]
end

def ask_user_to_start_rack_app
  puts 'Do you want to start your new rack app? y/n'
  answer = $stdin.gets.chomp
  if answer == 'y'
    app_message
    Dir.chdir 'theme' do
      Bundler.with_clean_env do
        ThemeBandit::Logger.green "running `bundle` in #{Dir.pwd}/"
        `bundle install`
        ThemeBandit::Logger.green 'running `bundle exec rackup -p 3000`'
        system('bundle exec rackup -p 3000')
      end
    end
  else
    app_message
    ThemeBandit::Logger.red "Don't forget to bundle before starting!"
  end
end

def app_message
  puts "Your rack app can be found at #{Dir.pwd}/theme/"
end

begin
  require 'theme_bandit'
  init
rescue LoadError => e
  require 'rubygems'
  require 'theme_bandit'
end
